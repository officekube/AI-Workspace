name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'feature/**'
  pull_request:
    branches:
      - 'feature/**'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Create package-lock.json if it doesn't exist
      - name: Create package-lock.json
        run: |
          if [ ! -f "package-lock.json" ]; then
            npm install --package-lock-only
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add package-lock.json
            git commit -m "chore: Add package-lock.json [skip ci]" || true
            git push || true
          fi
        shell: bash

      # Now setup cache after package-lock.json exists
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Download runtimes
        run: npm run download-runtimes

      - name: Build and Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.exe
            dist/*.dmg
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Release Notes
        if: matrix.os == 'macos-latest'
        run: node scripts/update-release.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}