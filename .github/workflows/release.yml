name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'feature/**'
  pull_request:
    branches:
      - 'feature/**'

permissions:
  contents: write
  issues: write

jobs:
  release:
    strategy:
      matrix:
        include:
          - os: macos-latest
            arch: x64
          - os: macos-latest
            arch: arm64
          - os: windows-latest
            arch: x64
          - os: ubuntu-latest
            arch: x64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Create package-lock.json
        run: |
          if [ ! -f "package-lock.json" ]; then
            npm install --package-lock-only
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add package-lock.json
            git commit -m "chore: Add package-lock.json [skip ci]" || true
            git push || true
          fi
        shell: bash

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Download runtimes
        run: npm run download-runtimes

      # For testing: if the workflow isnâ€™t triggered by a tag, create a temporary tag.
      - name: Set tag name for testing
        id: set_tag_name
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "Detected tag: ${GITHUB_REF##*/}"
            echo "::set-output name=tag::${GITHUB_REF##*/}"
          else
            TAG="v0.0.0-test-$(date +%s)"
            echo "No tag detected. Creating test tag: $TAG"
            git tag $TAG
            git push origin $TAG
            echo "::set-output name=tag::$TAG"
          fi
        shell: bash

      - name: Build and Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            if [[ "${{ matrix.arch }}" == "x64" ]]; then
              echo "Building macOS Intel installer"
              npm run build-mac-x64
            else
              echo "Building macOS Apple Silicon installer"
              npm run build-mac-arm64
            fi
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "Building Windows installer"
            npm run release
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            echo "Building Linux installer"
            npm run release
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.set_tag_name.outputs.tag }}
          files: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Release Notes
        if: matrix.os == 'macos-latest'
        run: node scripts/update-release.js
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}